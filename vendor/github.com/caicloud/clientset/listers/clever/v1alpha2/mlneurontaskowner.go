/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/caicloud/clientset/pkg/apis/clever/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MLNeuronTaskOwnerLister helps list MLNeuronTaskOwners.
type MLNeuronTaskOwnerLister interface {
	// List lists all MLNeuronTaskOwners in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.MLNeuronTaskOwner, err error)
	// MLNeuronTaskOwners returns an object that can list and get MLNeuronTaskOwners.
	MLNeuronTaskOwners(namespace string) MLNeuronTaskOwnerNamespaceLister
	MLNeuronTaskOwnerListerExpansion
}

// mLNeuronTaskOwnerLister implements the MLNeuronTaskOwnerLister interface.
type mLNeuronTaskOwnerLister struct {
	indexer cache.Indexer
}

// NewMLNeuronTaskOwnerLister returns a new MLNeuronTaskOwnerLister.
func NewMLNeuronTaskOwnerLister(indexer cache.Indexer) MLNeuronTaskOwnerLister {
	return &mLNeuronTaskOwnerLister{indexer: indexer}
}

// List lists all MLNeuronTaskOwners in the indexer.
func (s *mLNeuronTaskOwnerLister) List(selector labels.Selector) (ret []*v1alpha2.MLNeuronTaskOwner, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.MLNeuronTaskOwner))
	})
	return ret, err
}

// MLNeuronTaskOwners returns an object that can list and get MLNeuronTaskOwners.
func (s *mLNeuronTaskOwnerLister) MLNeuronTaskOwners(namespace string) MLNeuronTaskOwnerNamespaceLister {
	return mLNeuronTaskOwnerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MLNeuronTaskOwnerNamespaceLister helps list and get MLNeuronTaskOwners.
type MLNeuronTaskOwnerNamespaceLister interface {
	// List lists all MLNeuronTaskOwners in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.MLNeuronTaskOwner, err error)
	// Get retrieves the MLNeuronTaskOwner from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.MLNeuronTaskOwner, error)
	MLNeuronTaskOwnerNamespaceListerExpansion
}

// mLNeuronTaskOwnerNamespaceLister implements the MLNeuronTaskOwnerNamespaceLister
// interface.
type mLNeuronTaskOwnerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MLNeuronTaskOwners in the indexer for a given namespace.
func (s mLNeuronTaskOwnerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.MLNeuronTaskOwner, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.MLNeuronTaskOwner))
	})
	return ret, err
}

// Get retrieves the MLNeuronTaskOwner from the indexer for a given namespace and name.
func (s mLNeuronTaskOwnerNamespaceLister) Get(name string) (*v1alpha2.MLNeuronTaskOwner, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("mlneurontaskowner"), name)
	}
	return obj.(*v1alpha2.MLNeuronTaskOwner), nil
}
