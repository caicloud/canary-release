/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/caicloud/clientset/pkg/apis/config/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ConfigClaimLister helps list ConfigClaims.
type ConfigClaimLister interface {
	// List lists all ConfigClaims in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigClaim, err error)
	// ConfigClaims returns an object that can list and get ConfigClaims.
	ConfigClaims(namespace string) ConfigClaimNamespaceLister
	ConfigClaimListerExpansion
}

// configClaimLister implements the ConfigClaimLister interface.
type configClaimLister struct {
	indexer cache.Indexer
}

// NewConfigClaimLister returns a new ConfigClaimLister.
func NewConfigClaimLister(indexer cache.Indexer) ConfigClaimLister {
	return &configClaimLister{indexer: indexer}
}

// List lists all ConfigClaims in the indexer.
func (s *configClaimLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigClaim, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigClaim))
	})
	return ret, err
}

// ConfigClaims returns an object that can list and get ConfigClaims.
func (s *configClaimLister) ConfigClaims(namespace string) ConfigClaimNamespaceLister {
	return configClaimNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ConfigClaimNamespaceLister helps list and get ConfigClaims.
type ConfigClaimNamespaceLister interface {
	// List lists all ConfigClaims in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigClaim, err error)
	// Get retrieves the ConfigClaim from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ConfigClaim, error)
	ConfigClaimNamespaceListerExpansion
}

// configClaimNamespaceLister implements the ConfigClaimNamespaceLister
// interface.
type configClaimNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ConfigClaims in the indexer for a given namespace.
func (s configClaimNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigClaim, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigClaim))
	})
	return ret, err
}

// Get retrieves the ConfigClaim from the indexer for a given namespace and name.
func (s configClaimNamespaceLister) Get(name string) (*v1alpha1.ConfigClaim, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("configclaim"), name)
	}
	return obj.(*v1alpha1.ConfigClaim), nil
}
