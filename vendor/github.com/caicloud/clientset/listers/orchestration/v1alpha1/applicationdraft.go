/*
Copyright 2018 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/caicloud/clientset/pkg/apis/orchestration/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApplicationDraftLister helps list ApplicationDrafts.
type ApplicationDraftLister interface {
	// List lists all ApplicationDrafts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApplicationDraft, err error)
	// ApplicationDrafts returns an object that can list and get ApplicationDrafts.
	ApplicationDrafts(namespace string) ApplicationDraftNamespaceLister
	ApplicationDraftListerExpansion
}

// applicationDraftLister implements the ApplicationDraftLister interface.
type applicationDraftLister struct {
	indexer cache.Indexer
}

// NewApplicationDraftLister returns a new ApplicationDraftLister.
func NewApplicationDraftLister(indexer cache.Indexer) ApplicationDraftLister {
	return &applicationDraftLister{indexer: indexer}
}

// List lists all ApplicationDrafts in the indexer.
func (s *applicationDraftLister) List(selector labels.Selector) (ret []*v1alpha1.ApplicationDraft, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApplicationDraft))
	})
	return ret, err
}

// ApplicationDrafts returns an object that can list and get ApplicationDrafts.
func (s *applicationDraftLister) ApplicationDrafts(namespace string) ApplicationDraftNamespaceLister {
	return applicationDraftNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApplicationDraftNamespaceLister helps list and get ApplicationDrafts.
type ApplicationDraftNamespaceLister interface {
	// List lists all ApplicationDrafts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApplicationDraft, err error)
	// Get retrieves the ApplicationDraft from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApplicationDraft, error)
	ApplicationDraftNamespaceListerExpansion
}

// applicationDraftNamespaceLister implements the ApplicationDraftNamespaceLister
// interface.
type applicationDraftNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApplicationDrafts in the indexer for a given namespace.
func (s applicationDraftNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApplicationDraft, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApplicationDraft))
	})
	return ret, err
}

// Get retrieves the ApplicationDraft from the indexer for a given namespace and name.
func (s applicationDraftNamespaceLister) Get(name string) (*v1alpha1.ApplicationDraft, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("applicationdraft"), name)
	}
	return obj.(*v1alpha1.ApplicationDraft), nil
}
