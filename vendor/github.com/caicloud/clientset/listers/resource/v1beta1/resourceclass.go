/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/caicloud/clientset/pkg/apis/resource/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceClassLister helps list ResourceClasses.
type ResourceClassLister interface {
	// List lists all ResourceClasses in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.ResourceClass, err error)
	// Get retrieves the ResourceClass from the index for a given name.
	Get(name string) (*v1beta1.ResourceClass, error)
	ResourceClassListerExpansion
}

// resourceClassLister implements the ResourceClassLister interface.
type resourceClassLister struct {
	indexer cache.Indexer
}

// NewResourceClassLister returns a new ResourceClassLister.
func NewResourceClassLister(indexer cache.Indexer) ResourceClassLister {
	return &resourceClassLister{indexer: indexer}
}

// List lists all ResourceClasses in the indexer.
func (s *resourceClassLister) List(selector labels.Selector) (ret []*v1beta1.ResourceClass, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.ResourceClass))
	})
	return ret, err
}

// Get retrieves the ResourceClass from the index for a given name.
func (s *resourceClassLister) Get(name string) (*v1beta1.ResourceClass, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("resourceclass"), name)
	}
	return obj.(*v1beta1.ResourceClass), nil
}
