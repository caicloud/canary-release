/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/caicloud/clientset/pkg/apis/workload/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkloadRevisionLister helps list WorkloadRevisions.
type WorkloadRevisionLister interface {
	// List lists all WorkloadRevisions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WorkloadRevision, err error)
	// WorkloadRevisions returns an object that can list and get WorkloadRevisions.
	WorkloadRevisions(namespace string) WorkloadRevisionNamespaceLister
	WorkloadRevisionListerExpansion
}

// workloadRevisionLister implements the WorkloadRevisionLister interface.
type workloadRevisionLister struct {
	indexer cache.Indexer
}

// NewWorkloadRevisionLister returns a new WorkloadRevisionLister.
func NewWorkloadRevisionLister(indexer cache.Indexer) WorkloadRevisionLister {
	return &workloadRevisionLister{indexer: indexer}
}

// List lists all WorkloadRevisions in the indexer.
func (s *workloadRevisionLister) List(selector labels.Selector) (ret []*v1alpha1.WorkloadRevision, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkloadRevision))
	})
	return ret, err
}

// WorkloadRevisions returns an object that can list and get WorkloadRevisions.
func (s *workloadRevisionLister) WorkloadRevisions(namespace string) WorkloadRevisionNamespaceLister {
	return workloadRevisionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkloadRevisionNamespaceLister helps list and get WorkloadRevisions.
type WorkloadRevisionNamespaceLister interface {
	// List lists all WorkloadRevisions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WorkloadRevision, err error)
	// Get retrieves the WorkloadRevision from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WorkloadRevision, error)
	WorkloadRevisionNamespaceListerExpansion
}

// workloadRevisionNamespaceLister implements the WorkloadRevisionNamespaceLister
// interface.
type workloadRevisionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkloadRevisions in the indexer for a given namespace.
func (s workloadRevisionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkloadRevision, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkloadRevision))
	})
	return ret, err
}

// Get retrieves the WorkloadRevision from the indexer for a given namespace and name.
func (s workloadRevisionNamespaceLister) Get(name string) (*v1alpha1.WorkloadRevision, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workloadrevision"), name)
	}
	return obj.(*v1alpha1.WorkloadRevision), nil
}
