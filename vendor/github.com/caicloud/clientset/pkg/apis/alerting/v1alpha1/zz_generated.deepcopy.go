// +build !ignore_autogenerated

/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingRule) DeepCopyInto(out *AlertingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingRule.
func (in *AlertingRule) DeepCopy() *AlertingRule {
	if in == nil {
		return nil
	}
	out := new(AlertingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingRuleList) DeepCopyInto(out *AlertingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingRuleList.
func (in *AlertingRuleList) DeepCopy() *AlertingRuleList {
	if in == nil {
		return nil
	}
	out := new(AlertingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingRuleSpec) DeepCopyInto(out *AlertingRuleSpec) {
	*out = *in
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(SubRuleTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.NotifyTypes != nil {
		in, out := &in.NotifyTypes, &out.NotifyTypes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContactGroups != nil {
		in, out := &in.ContactGroups, &out.ContactGroups
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingRuleSpec.
func (in *AlertingRuleSpec) DeepCopy() *AlertingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AlertingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingRuleStatus) DeepCopyInto(out *AlertingRuleStatus) {
	*out = *in
	if in.PhaseTimestamp != nil {
		in, out := &in.PhaseTimestamp, &out.PhaseTimestamp
		*out = (*in).DeepCopy()
	}
	if in.FiringSubRules != nil {
		in, out := &in.FiringSubRules, &out.FiringSubRules
		*out = make([]AlertingSubRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingRuleStatus.
func (in *AlertingRuleStatus) DeepCopy() *AlertingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AlertingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingSubRule) DeepCopyInto(out *AlertingSubRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingSubRule.
func (in *AlertingSubRule) DeepCopy() *AlertingSubRule {
	if in == nil {
		return nil
	}
	out := new(AlertingSubRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertingSubRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingSubRuleList) DeepCopyInto(out *AlertingSubRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlertingSubRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingSubRuleList.
func (in *AlertingSubRuleList) DeepCopy() *AlertingSubRuleList {
	if in == nil {
		return nil
	}
	out := new(AlertingSubRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlertingSubRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingSubRuleSpec) DeepCopyInto(out *AlertingSubRuleSpec) {
	*out = *in
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(FireCondition)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(ObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingSubRuleSpec.
func (in *AlertingSubRuleSpec) DeepCopy() *AlertingSubRuleSpec {
	if in == nil {
		return nil
	}
	out := new(AlertingSubRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertingSubRuleStatus) DeepCopyInto(out *AlertingSubRuleStatus) {
	*out = *in
	if in.PhaseTimestamp != nil {
		in, out := &in.PhaseTimestamp, &out.PhaseTimestamp
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertingSubRuleStatus.
func (in *AlertingSubRuleStatus) DeepCopy() *AlertingSubRuleStatus {
	if in == nil {
		return nil
	}
	out := new(AlertingSubRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FireCondition) DeepCopyInto(out *FireCondition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FireCondition.
func (in *FireCondition) DeepCopy() *FireCondition {
	if in == nil {
		return nil
	}
	out := new(FireCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectReference) DeepCopyInto(out *ObjectReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectReference.
func (in *ObjectReference) DeepCopy() *ObjectReference {
	if in == nil {
		return nil
	}
	out := new(ObjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubRuleTemplate) DeepCopyInto(out *SubRuleTemplate) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(ObjectReference)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AlertingSubRuleSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubRuleTemplate.
func (in *SubRuleTemplate) DeepCopy() *SubRuleTemplate {
	if in == nil {
		return nil
	}
	out := new(SubRuleTemplate)
	in.DeepCopyInto(out)
	return out
}
